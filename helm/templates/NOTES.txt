Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To get the application URL:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.api.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "aws-gcp-provisioner.fullname" . }}-api)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.api.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "aws-gcp-provisioner.fullname" . }}-api'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "aws-gcp-provisioner.fullname" . }}-api --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.api.service.port }}
{{- else if contains "ClusterIP" .Values.api.service.type }}
  kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "aws-gcp-provisioner.fullname" . }}-api {{ .Values.api.service.port }}:{{ .Values.api.service.port }}
  echo "Visit http://127.0.0.1:{{ .Values.api.service.port }} to use your application"
{{- end }}

To initialize the database:
  kubectl exec -it --namespace {{ .Release.Namespace }} deployment/{{ include "aws-gcp-provisioner.fullname" . }}-api -- npm run prisma:migrate

For more information about the API, visit:
  http://localhost:{{ .Values.api.service.port }}/documentation
