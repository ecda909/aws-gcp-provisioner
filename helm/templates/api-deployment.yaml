apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aws-gcp-provisioner.fullname" . }}-api
  labels:
    {{- include "aws-gcp-provisioner.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "aws-gcp-provisioner.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "aws-gcp-provisioner.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "aws-gcp-provisioner.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | default dict | nindent 8 }}
      initContainers:
        - name: wait-for-db
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z {{ include "aws-gcp-provisioner.fullname" . }}-db 5432; do echo waiting for database; sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | default dict | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "aws-gcp-provisioner.fullname" . }}-db-secret
                  key: database-url
            {{- range $key, $value := .Values.api.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.api.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "aws-gcp-provisioner.fullname" . }}-api-secret
                  key: {{ $key | lower | replace "_" "-" }}
            {{- end }}
          volumeMounts:
            - name: terraform-workspaces
              mountPath: /app/terraform-workspaces
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
      volumes:
        - name: terraform-workspaces
          {{- if .Values.api.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "aws-gcp-provisioner.fullname" . }}-terraform-workspaces
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
